name: Build and Run Docker Containers

on:
  push:
    paths:
      - 'm3/**'

jobs:
  build-and-run:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep 'tag_name' | cut -d\" -f4)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version  # Verify Docker Compose installation

    - name: Build Docker images 
      run: docker-compose build --verbose

    - name: Start Docker containers
      run: docker-compose up -d

    - name: Check Docker container status
      run: docker-compose ps

    - name: Check Docker container logs
      run: docker-compose logs

    - name: Wait for the Flask app to be up
      run: |
        echo "Waiting for the Flask app to be up..."
        for i in {1..20}; do
          if curl -s http://localhost:5000; then
            echo "Flask app is up!"
            exit 0
          fi
          sleep 10
        done
        echo "Flask app did not start in time" >&2
        exit 1
        
    - name: Test Flask app
      run: |
        curl -X POST http://localhost:5000/predict -H "Content-Type: application/json" -d "{\"features\": [1.5, 2.5, 3.5, 4.5]}"
        
    - name: Commit and push the model file
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
        git add GS_model*.joblib
        git add report.md
        git commit -m "Add model and report with timestamp"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
